{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","actions/actionTypes.js","actions/actions.js","App.js","reducers/todos.js","store.js","index.js"],"names":["AddTodo","input","submitTodo","undeleteTodo","inputChanged","disableAddTodo","disableUndelete","onSubmit","event","preventDefault","value","className","ref","element","onChange","placeholder","type","disabled","onClick","TodoList","todos","deleteTodo","todoItems","map","todo","key","id","text","types","SUBMIT_TODO","DELETE_TODO","UNDELETE_TODO","INPUT_CHANGED","todoId","actions","inputText","connect","state","todoListApp","dispatch","initialState","deleted","reducer","action","filter","reducers","combineReducers","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e6d313cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddTodo = ({ submitTodo, undeleteTodo, inputChanged, disableAddTodo, disableUndelete }) => {\r\n  let input;\r\n  // const disableAddTodo = true;\r\n  // const disableUndelete = true;\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          submitTodo(input.value);\r\n          input.value = '';\r\n        }}\r\n      >\r\n\r\n        <input\r\n          className=\"todo-input\"\r\n          ref={(element) => {\r\n            input = element;\r\n          }}\r\n          onChange={() => inputChanged(input.value)}\r\n          placeholder=\"I'm going to...\"\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"todo-submit\"\r\n          disabled={disableAddTodo}\r\n        >\r\n          Add Todo\r\n        </button>\r\n\r\n        <button\r\n          className=\"todo-undelete\"\r\n          onClick={() => undeleteTodo()}\r\n          disabled={disableUndelete}\r\n        >\r\n          Undelete\r\n        </button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTodo.propTypes = {\r\n  submitTodo: PropTypes.func.isRequired,\r\n  undeleteTodo: PropTypes.func.isRequired,\r\n  inputChanged: PropTypes.func.isRequired,\r\n  disableAddTodo: PropTypes.bool.isRequired,\r\n  disableUndelete: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AddTodo;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst TodoList = ({ todos, deleteTodo }) => {\nif (todos) {\n  var todoItems = todos.map(todo => {\n  return ( \n      <li key={todo.id}>\n        <button\n          type=\"button\"\n          className=\"todo-delete\"\n          onClick={() => deleteTodo(todo.id)}\n        >\n          Delete\n        </button>\n        <span className=\"todo-text\">\n          {todo.text}\n        </span>\n      </li>\n    )\n  });\n}\n\n    return (\n      <ul>\n        {todoItems}\n      </ul>\n    );\n  };\n\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    },\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;","const types = {\n    SUBMIT_TODO: 'SUBMIT_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    UNDELETE_TODO: 'UNDELETE_TODO',\n    INPUT_CHANGED: 'INPUT_CHANGED',\n  };\n  \n  export default types;\n\n\n","import types from './actionTypes';\n\nlet todoId = 0;\n\nconst nextId = () => {\n  todoId += 1;\n  return todoId;\n};\n\nconst actions = {\n  submitTodo(text) {\n    return {\n      type: types.SUBMIT_TODO,\n      id: nextId(),\n      text,\n    };\n  },\n\n  deleteTodo(id) {\n    return {\n      type: types.DELETE_TODO,\n      id,\n    };\n  },\n\n  undeleteTodo() {\n    return {\n      type: types.UNDELETE_TODO,\n    };\n  },\n\n  inputChanged(inputText) {\n    return {\n      type: types.INPUT_CHANGED,\n      inputText,\n    };\n  },\n};\n\nexport default actions;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AddTodo from './components/AddTodo';\r\nimport TodoList from './components/TodoList';\r\nimport actions from './actions/actions';\r\nimport './App.css';\r\n\r\n\r\nexport const App = ({\r\n    submitTodo,\r\n    todos,\r\n    deleteTodo,\r\n    undeleteTodo,\r\n    inputChanged,\r\n    disableAddTodo,\r\n    disableUndelete,\r\n  }) => (\r\n    <div>\r\n      <h1>Todo list</h1>\r\n\r\n      <AddTodo\r\n        submitTodo={submitTodo}\r\n        undeleteTodo={undeleteTodo}\r\n        inputChanged={inputChanged}\r\n        disableAddTodo={disableAddTodo}\r\n        disableUndelete={disableUndelete}\r\n      />\r\n\r\n      <TodoList\r\n        todos={todos}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    </div>\r\n);\r\n\r\nApp.propTypes = {\r\n  submitTodo: PropTypes.func.isRequired,\r\n  todos: PropTypes.arrayOf(PropTypes.shape(\r\n    {\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n    },\r\n  )).isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  undeleteTodo: PropTypes.func.isRequired,\r\n  inputChanged: PropTypes.func.isRequired,\r\n  disableAddTodo: PropTypes.bool.isRequired,\r\n  disableUndelete: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => state.todoListApp;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submitTodo: (text) => {\r\n    if (text) {\r\n      dispatch(actions.submitTodo(text));\r\n    }\r\n  },\r\n\r\n  deleteTodo: (id) => {\r\n    dispatch(actions.deleteTodo(id));\r\n  },\r\n\r\n  undeleteTodo: () => {\r\n    dispatch(actions.undeleteTodo());\r\n  },\r\n\r\n  inputChanged: (text) => {\r\n    dispatch(actions.inputChanged(text));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import types from \"../actions/actionTypes\";\n\nexport const initialState = {\n    todos: [],\n    deleted: {},\n    disableAddTodo: true,\n    disableUndelete: true,\n  };\n  \n  export const reducer = (state = initialState, action) => {\n    switch (action.type) {\n  \n      case types.SUBMIT_TODO:\n        return {\n          ...state,\n          todos: [\n            ...state.todos,\n            {\n              id: action.id,\n              text: action.text,\n            },\n          ],\n          disableAddTodo: true,\n        };\n  \n      case types.DELETE_TODO:\n        return {\n          ...state,\n          todos: [\n            ...state.todos.filter(todo => (\n              todo.id !== action.id\n            )),\n          ],\n          deleted: state.todos.filter(todo => todo.id === action.id)[0],\n          disableUndelete: false,\n        };\n  \n      case types.UNDELETE_TODO:\n        return {\n          ...state,\n          todos: [\n            ...state.todos,\n            state.deleted,\n          ],\n          deleted: {},\n          disableUndelete: true,\n        };\n  \n      case types.INPUT_CHANGED:\n        if (action.inputText) {\n          return {\n            ...state,\n            disableAddTodo: false,\n          };\n        }\n        return {\n          ...state,\n        };\n  \n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;","import { combineReducers, createStore } from 'redux';\nimport todoListApp from './reducers/todos';\n\nconst reducers = combineReducers({\n  todoListApp,\n});\n\nexport default createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// registerServiceWorker();\n"],"sourceRoot":""}